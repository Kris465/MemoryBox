from aiogram.dispatcher.filters.state import State, StatesGroup


class Form(StatesGroup):
    name = State()  # состояние для получения имени
    age = State()  # состояние для получения возраста
    gender = State()  # состояние для получения пола


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer("Привет! Как тебя зовут?")
    await Form.name.set()  # устанавливаем состояние для получения имени


@dp.message_handler(state=Form.name)
async def process_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text  # сохраняем имя в хранилище состояний
    await message.answer("Сколько тебе лет?")
    await Form.age.set()  # устанавливаем состояние для получения возраста


@dp.message_handler(state=Form.age)
async def process_age(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['age'] = message.text  # сохраняем возраст в хранилище состояний
    await message.answer("Какой у тебя пол?")
    await Form.gender.set()  # устанавливаем состояние для получения пола


@dp.message_handler(state=Form.gender)
async def process_gender(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['gender'] = message.text  # сохраняем пол в хранилище состояний
        # выводим все данные, которые мы получили
        await message.answer(f"Тебя зовут {data['name']}, тебе {data['age']} лет, ты {data['gender']}")
    await state.finish()  # завершаем машину состояний